@page "/canliborsa"
@rendermode InteractiveServer
@using System.Net.Http.Json;
@using MudBlazor,
@using AspireBorsa.Web;
@using AspireBorsa.Web.Model;
@inject HttpClient httpClient;
@inject NavigationManager Navigation;


<PageTitle>Canlı Borsa</PageTitle>

<h3> 
    Canlı Veriler
</h3>

<MudDataGrid T="ViewStock" Items="@viewStocks" SelectOnRowClick="true" Class="zebra-table">
    <Columns>
        <PropertyColumn Property="x => x.Symbol" Title="Menkul" />
        <PropertyColumn Property="x => x.LastPrice" Title="Son" />
        <PropertyColumn Property="x => x.BuyPrice" Title="Alış" />
        <PropertyColumn Property="x => x.SellPrice" Title="Satış" />
        <PropertyColumn Property="x => x.HighPrice" Title="Yüksek" />
        <PropertyColumn Property="x => x.LowPrice" Title="Düşük" />
        <PropertyColumn Property="x => x.AveragePrice" Title="Ortalama Fiyat" />

        <PropertyColumn Property="x => x.PercentageChange" Title="%"/>


@*         <PropertyColumn Property="x => x.PercentageChange" Title="%" Style="@((context) => GetPercentageChangeStyle(context))" /> *@

        @* <TemplateColumn Title="%">
            <CellTemplate>
                @((MudBlazor.TableContext<ViewStock> context) =>
                    {
                        var cssClass = GetPercentageChangeStyle(context.Item);
                        return new MarkupString($"<span style='{cssClass}'>{context.Item.PercentageChange}%</span>");
                    })
            </CellTemplate>
        </TemplateColumn> *@

        <PropertyColumn Property="x => x.VolumeLot" Title="Hacim (Lot)" />
        <PropertyColumn Property="x => x.VolumeTL" Title="Hacim (TL)" />
        <PropertyColumn Property="x => x.LastTransactionTime" Title="Son İşlem" />
    </Columns>
    <PagerContent>
        <MudDataGridPager T="ViewStock" />
    </PagerContent>
</MudDataGrid>

@code {
    private IEnumerable<ViewStock> viewStocks = new List<ViewStock>();
    // EventCallback<DataGridRowClickEventArgs<ViewStock>> RowClicked2 { get; set; } = new Action(RowClicked);
    protected override async Task OnInitializedAsync()
    {     
        try
        {
            viewStocks = await httpClient.GetFromJsonAsync<List<ViewStock>>("https://localhost:7375/api/Stock/GetStocks");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching stocks: {ex.Message}");
        }
    }

    private string GetPercentageChangeStyle(ViewStock stock)
    {
        if (stock.PercentageChange > 0)
            return $"color:{Colors.Green.Accent3};";
        else if (stock.PercentageChange < 0)
            return $"color:{Colors.Red.Accent3};";
        else
            return $"color:;";
    }

    // private void RowClicked()
    // {        
    //     Navigation.NavigateTo($"https: //localhost:7224/Stockdetails/{}");
    // }   
}

<style>

    .zebra-table .mud-table-row:nth-child(odd) {
        background-color: #ffffff; /* Beyaz */
    }

    .zebra-table .mud-table-row:nth-child(even) {
        background-color: #f9f9f9; /* Gri */
    }

</style>